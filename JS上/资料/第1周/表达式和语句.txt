JS表达式：  

什么是表达式：是由运算元和运算符(可选)构成，并产生运算结果的语法结构； ――短语
原始表达式：原始表达式是表达式的最小单位――它不再包含其他表达式。
	this、null、arguments等内置的关键字
	变量。即一个已声明的标识符
	直接量。仅包括数字直接量、布尔值直接量、字符串直接量、正则直接量
运算符构成的表达式:
	x*y     x+y

对象和数组初始化表达式:实际上是一个新创建的对象和数组。也称之为“对象直接量”和“数组直接量”
	[ ]   //空数组
	[ 1,3 ]  //拥有两个元素的数组
	数组初始化表达式中的元素初始化表达式也可以是数组初始化表达式――即数组套数组
	{ }  //空对象
                { x:2，y：3 }  //拥有两个属性成员的对象
	对象初始化表达式和数组初始化非常类似，也可以嵌套
函数定义表达式：函数定义表达式定义一个JavaScript函数，表达式的值是这个新定义的函数。
	var fun = function( x ){ }
调用表达式：JavaScript中的调用表达式是一种调用函数或方法的语法表示。
	fun( 0 );  //f是一个函数表达式；0是一个参数表达式
	Math.max(x,y,z); // Math.max是一个函数；x，y，z是参数
	a.sort()   // a.sort是一个函数，没有参数
对象创建表达式：创建一个对象并调用一个函数( 构造函数 )初始化新对象的属性。
	new Object();
	如果不需要参数，小括号可省；  
	

JS语句：
 什么是语句：向浏览器发出的命令，作用是告诉浏览器该做什么。
 表达式语句：把表达式当做语句
	赋值语句： i*=3    a = 1+2   递增递减运算符
	delete运算符：用于删除一个对象的属性
	函数调用：alert（）;
复合语句: 用花括号联合多条语句形成一条语句的语句
	{
	var a = 2;
	console.log(a);
	}
	语句块的结尾不需要分号。块中的原始语句必须以分号结束。
	
声明语句：var和function都是声明语句，它们声明或定义变量或函数。
	var i；   //一个简单的变量
	var j = 0;    //一个带有初始值的变量
	var k = ‘hello’+j；  //一个复杂的初始化表达式

	var f = function(x){  }    //函数表达式
	function f(x){ }              //函数声明	
条件语句：是通过判断指定表达式来决定执行还是跳过某些语句。
	
条件-if...else语句
